#ifndef __VOIP_FEATURE_H
#define __VOIP_FEATURE_H

//*****************************************
//* VoIP Feature (64 bits)
//*****************************************


/* One ARM Router ( bit 32 )*/
#define ONE_ARM_ROUTER_SUPPORT		0x100000000ULL
//#define ONE_ARM_ROUTER_NOT_SUPPORT	0xFFFFFFFEFFFFFFFFULL

/* Ethernet DSP (bit 31)*/
#define ETHERNET_DSP_VOIP		0x80000000
#define NON_ETHERNET_DSP_VOIP		0x00000000

#define ETHERNET_DSP_MASK		0x80000000

/* Ethernet DSP Device Number( bit 29-30 )*/
#define DSP_DEVICE_NUM_1		0x00000000
#define DSP_DEVICE_NUM_2		0x20000000
#define DSP_DEVICE_NUM_3		0x40000000
#define DSP_DEVICE_NUM_4		0x60000000

#define DSP_DEVICE_NUM_MASK		0x60000000
#define DSP_DEVICE_NUM_SHIFT	29

/* DECT Type (bit 28)*/
#define NO_DECT				0x00000000
#define DECT_SUPPORT			0x10000000

#define DECT_TYPE_MASK			0x10000000

/* DAA Type ( bit 26-27 )*/
#define NO_DAA				0x00000000	//No DAA
#define REAL_DAA			0x04000000	//No Negotiation
#define REAL_DAA_NEGO			0x08000000	//Negotiation
#define VIRTUAL_DAA			0x0C000000	//Virtual DAA

#define DAA_TYPE_MASK			0x0C000000

/* Platform ( bit 24-25 )*/
#define PLATFORM_8186			0x00000000	//8186 SoC
#define PLATFORM_865x			0x01000000	//865x Soc
#define PLATFORM_867x			0x02000000	//867x Soc
#define PLATFORM_89xx			0x03000000	//89xx Soc

#define PLATFORM_MASK			0x03000000

/* Platform Type (8186) ( bit 22-23 )*/
#define PLATFORM_TYPE_8186V		0x00000000	//8186V 
#define PLATFORM_TYPE_8186PV		0x00400000	//8186PV
#define PLATFORM_TYPE3			0x00800000	//reserve
#define PLATFORM_TYPE4			0x00C00000	//reserve

/* Platform Type (865x) ( bit 22-23 )*/
#define PLATFORM_TYPE_8651		0x00000000	//8651
#define PLATFORM_TYPE_865xC		0x00400000	//865xC
#define PLATFORM_TYPE3			0x00800000	//reserve
#define PLATFORM_TYPE4			0x00C00000	//reserve

/* Platform Type (867x) ( bit 22-23 )*/
#define PLATFORM_TYPE_8671		0x00000000	//8671
#define PLATFORM_TYPE_8672		0x00400000	//8672
#define PLATFORM_TYPE_8676		0x00800000	//8676
#define PLATFORM_TYPE4			0x00C00000	//reserve

/* Platform Type (89xx) ( bit 22-23 )*/
#define PLATFORM_TYPE_8972B_8982B	0x00000000	//8972B or 8982B
#define PLATFORM_TYPE_89xxC		0x00400000	//89xxC
#define PLATFORM_TYPE3			0x00800000	//reserve
#define PLATFORM_TYPE4			0x00C00000	//reserve

#define PLATFORM_TYPE_MASK		0x00C00000

/* IVR ( bit 21 )*/
#define IVR_SUPPORT			0x00200000
#define IVR_NOT_SUPPORT			0xFFDFFFFF

/* SLIC Type ( bit 20 )*/
#define NO_SLIC_SUPPORT			0x00000000
#define SLIC_SUPPORT			0x00100000

#define SLIC_TYPE_MASK			0x00100000

/* Codec ( bit 9-11, 13-19)*/
#define CODEC_G729_SUPPORT		0x00080000
#define CODEC_G729_NOT_SUPPORT		0xFFF7FFFF

#define CODEC_G723_SUPPORT		0x00040000
#define CODEC_G723_NOT_SUPPORT		0xFFFBFFFF

#define CODEC_G726_SUPPORT		0x00020000
#define CODEC_G726_NOT_SUPPORT		0xFFFDFFFF

#define CODEC_GSMFR_SUPPORT		0x00010000
#define CODEC_GSMFR_NOT_SUPPORT		0xFFFEFFFF

#define CODEC_AMR_SUPPORT		0x00008000
#define CODEC_AMR_NOT_SUPPORT		0xFFFF7FFF

#define CODEC_iLBC_SUPPORT		0x00004000
#define CODEC_iLBC_NOT_SUPPORT		0xFFFFBFFF

#define CODEC_T38_SUPPORT		0x00002000
#define CODEC_T38_NOT_SUPPORT		0xFFFFDFFF

#define CODEC_G722_SUPPORT		0x00000200
#define CODEC_G722_NOT_SUPPORT		0xFFFFFDFF

#define CODEC_SPEEX_NB_SUPPORT		0x00000400
#define CODEC_SPEEX_NB_NOT_SUPPORT	0xFFFFFBFF

/* VoIP MW ( bit 12 )*/
#define VOIP_MW_REALTEK			0x00001000
#define VOIP_MW_AUDIOCODES		0x00000000

#define VOIP_MW_MASK			0x00001000

/* DAA NUM ( bit 6-8 )*/
#define DAA_NUM_1			0x00000000
#define DAA_NUM_2			0x00000040
#define DAA_NUM_3			0x00000080
#define DAA_NUM_4			0x000000C0
#define DAA_NUM_5			0x00000100
#define DAA_NUM_6			0x00000140
#define DAA_NUM_7			0x00000180
#define DAA_NUM_8			0x000001C0

#define DAA_NUM_MASK		0x000001C0
#define DAA_NUM_SHIFT		6

/* DECT NUM ( bit 4-5 )*/
#define DECT_NUM_1			0x00000000
#define DECT_NUM_2			0x00000010
#define DECT_NUM_3			0x00000020
#define DECT_NUM_4			0x00000030
#define DECT_NUM_MASK		0x00000030
#define DECT_NUM_SHIFT		4

/* SLIC NUM ( bit 0-3 )*/
#define SLIC_NUM_1			0x00000000
#define SLIC_NUM_2			0x00000001
#define SLIC_NUM_3			0x00000002
#define SLIC_NUM_4			0x00000003
#define SLIC_NUM_5			0x00000004
#define SLIC_NUM_6			0x00000005
#define SLIC_NUM_7			0x00000006
#define SLIC_NUM_8			0x00000007
#define SLIC_NUM_9			0x00000008
#define SLIC_NUM_10			0x00000009
#define SLIC_NUM_11			0x0000000A
#define SLIC_NUM_12			0x0000000B
#define SLIC_NUM_13			0x0000000C
#define SLIC_NUM_14			0x0000000D
#define SLIC_NUM_15			0x0000000E
#define SLIC_NUM_16			0x0000000F

#define SLIC_NUM_MASK		0x0000000F
#define SLIC_NUM_SHIFT		0


/* SLIC NUM */
#if 1

// we assert SLIC_CH_NUM in GET_FEATURE ioctl 
#define RTK_VOIP_SLIC_FEATURE		\
	( SLIC_CH_NUM ?	SLIC_SUPPORT | ( ( ( SLIC_CH_NUM - 1 ) << SLIC_NUM_SHIFT ) & SLIC_NUM_MASK ) : NO_SLIC_SUPPORT )

#else
#if defined (CONFIG_RTK_VOIP_SLIC_NUM_1)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_1
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_2)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_2
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_3)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_3
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_4)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_4
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_5)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_5
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_6)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_6
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_7)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_7
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_8)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_8
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_9)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_9
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_10)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_10
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_11)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_11
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_12)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_12
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_13)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_13
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_14)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_14
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_15)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_15
#elif defined (CONFIG_RTK_VOIP_SLIC_NUM_16)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_16
#elif defined (CONFIG_RTK_VOIP_DRIVERS_IP_PHONE)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_1
#elif defined (CONFIG_RTK_VOIP_DRIVERS_ATA_DECT)
#define	RTK_VOIP_SLIC_FEATURE		SLIC_NUM_4
#endif
#endif

/* DECT NUM */
#if 1

// we assert SLIC_CH_NUM in GET_FEATURE ioctl 
#define	RTK_VOIP_DECT_FEATURE		\
	( DECT_CH_NUM ? (DECT_SUPPORT | ( ( ( DECT_CH_NUM - 1 ) << DECT_NUM_SHIFT ) & DECT_NUM_MASK ) ) : 0 )

#else
#if defined (CONFIG_RTK_VOIP_DECT_NUM_1)
#define	RTK_VOIP_DECT_FEATURE		(DECT_SUPPORT | DECT_NUM_1)
#elif defined (CONFIG_RTK_VOIP_DECT_NUM_2)
#define	RTK_VOIP_DECT_FEATURE		(DECT_SUPPORT | DECT_NUM_2)
#elif defined (CONFIG_RTK_VOIP_DECT_NUM_3)
#define	RTK_VOIP_DECT_FEATURE		(DECT_SUPPORT | DECT_NUM_3)
#elif defined (CONFIG_RTK_VOIP_DECT_NUM_4)
#define	RTK_VOIP_DECT_FEATURE		(DECT_SUPPORT | DECT_NUM_4)
#else
#define	RTK_VOIP_DECT_FEATURE		NO_DECT
#endif
#endif

#define RTK_VOIP_DECT_MASK		(DECT_NUM_MASK | DECT_TYPE_MASK)

#ifdef CONFIG_RTK_VOIP_ETHERNET_DSP_IS_HOST
/* Ethernet DSP Device Number */
#if 1
#define RTK_VOIP_DSP_DEVICE_NUM_FEATURE		\
	( ( ( CONFIG_RTK_VOIP_DSP_DEVICE_NR - 1 ) << DSP_DEVICE_NUM_SHIFT ) 		\
											& DSP_DEVICE_NUM_MASK )	
#else
#if defined (CONFIG_RTK_VOIP_DSP_DEVICE_NUM_1)
#define RTK_VOIP_DSP_DEVICE_NUM_FEATURE		DSP_DEVICE_NUM_1
#elif defined (CONFIG_RTK_VOIP_DSP_DEVICE_NUM_2)
#define RTK_VOIP_DSP_DEVICE_NUM_FEATURE		DSP_DEVICE_NUM_2
#elif defined (CONFIG_RTK_VOIP_DSP_DEVICE_NUM_3)
#define RTK_VOIP_DSP_DEVICE_NUM_FEATURE		DSP_DEVICE_NUM_3
#elif defined (CONFIG_RTK_VOIP_DSP_DEVICE_NUM_4)
#define RTK_VOIP_DSP_DEVICE_NUM_FEATURE		DSP_DEVICE_NUM_4
#endif
#endif
#endif


/* DAA NUM and Type*/
#ifdef CONFIG_RTK_VOIP_DRIVERS_FXO
#ifdef CONFIG_RTK_VOIP_DRIVERS_DAA_SUPPORT

#if 1

// we assert SLIC_CH_NUM in GET_FEATURE ioctl 
#define RTK_VOIP_DAA_FEATURE		\
	( DAA_CH_NUM ? ( REAL_DAA_NEGO | ( ( ( DAA_CH_NUM - 1 ) << DAA_NUM_SHIFT ) & DAA_NUM_MASK ) ) : 0 )

#else
#if (DAA_CH_NUM == 1)
#define RTK_VOIP_DAA_FEATURE		(REAL_DAA_NEGO | DAA_NUM_1)
#elif (DAA_CH_NUM == 2)
#define RTK_VOIP_DAA_FEATURE		(REAL_DAA_NEGO | DAA_NUM_2)
#elif (DAA_CH_NUM == 3)
#define RTK_VOIP_DAA_FEATURE		(REAL_DAA_NEGO | DAA_NUM_3)
#elif (DAA_CH_NUM == 4)
#define RTK_VOIP_DAA_FEATURE		(REAL_DAA_NEGO | DAA_NUM_4)
#elif (DAA_CH_NUM == 8)
#define RTK_VOIP_DAA_FEATURE		(REAL_DAA_NEGO | DAA_NUM_8)
#endif
#endif

#elif defined (CONFIG_RTK_VOIP_DRIVERS_VIRTUAL_DAA)
#if (VIRTUAL_DAA_CH_NUM == 1)
#define RTK_VOIP_DAA_FEATURE		(VIRTUAL_DAA | DAA_NUM_1)
#elif (VIRTUAL_DAA_CH_NUM == 2)
#define RTK_VOIP_DAA_FEATURE		(VIRTUAL_DAA | DAA_NUM_2)
#elif (VIRTUAL_DAA_CH_NUM == 3)
#define RTK_VOIP_DAA_FEATURE		(VIRTUAL_DAA | DAA_NUM_3)
#elif (VIRTUAL_DAA_CH_NUM == 4)
#define RTK_VOIP_DAA_FEATURE		(VIRTUAL_DAA | DAA_NUM_4)
#endif
#endif //!CONFIG_RTK_VOIP_DRIVERS_DAA_SUPPORT
#else // !CONFIG_RTK_VOIP_DRIVERS_FXO
#define RTK_VOIP_DAA_FEATURE		NO_DAA
#endif

#define RTK_VOIP_DAA_MASK		(DAA_NUM_MASK | DAA_TYPE_MASK)
				
/* Platform anf Platform Type */
#if defined (CONFIG_RTK_VOIP_DRIVERS_PCM8186) && (CONFIG_RTK_VOIP_DRIVERS_PCM8186V)
#define	RTK_VOIP_PLATFORM_FEATURE	(PLATFORM_8186 | PLATFORM_TYPE_8186V)
#elif defined (CONFIG_RTK_VOIP_DRIVERS_PCM8186) && (CONFIG_RTK_VOIP_DRIVERS_PCM8186PV)
#define	RTK_VOIP_PLATFORM_FEATURE	(PLATFORM_8186 | PLATFORM_TYPE_8186PV)
#elif defined (CONFIG_RTK_VOIP_DRIVERS_PCM8651)
#define	RTK_VOIP_PLATFORM_FEATURE	(PLATFORM_865x | PLATFORM_TYPE_8651)
#elif defined (CONFIG_RTK_VOIP_DRIVERS_PCM8671)
#define	RTK_VOIP_PLATFORM_FEATURE	(PLATFORM_867x | PLATFORM_TYPE_8671)
#elif defined (CONFIG_RTK_VOIP_DRIVERS_PCM8672)
#define	RTK_VOIP_PLATFORM_FEATURE	(PLATFORM_867x | PLATFORM_TYPE_8672)
#elif defined (CONFIG_RTK_VOIP_DRIVERS_PCM8676)
#define	RTK_VOIP_PLATFORM_FEATURE	(PLATFORM_867x | PLATFORM_TYPE_8676)
#elif defined (CONFIG_RTK_VOIP_DRIVERS_PCM865xC)
#define	RTK_VOIP_PLATFORM_FEATURE	(PLATFORM_865x | PLATFORM_TYPE_865xC)
#elif defined (CONFIG_RTK_VOIP_DRIVERS_PCM8972B_FAMILY)
#define	RTK_VOIP_PLATFORM_FEATURE	(PLATFORM_89xx | PLATFORM_TYPE_8972B_8982B)
#elif defined (CONFIG_RTK_VOIP_DRIVERS_PCM89xxC)
#define	RTK_VOIP_PLATFORM_FEATURE	(PLATFORM_89xx | PLATFORM_TYPE_89xxC)
#endif

#define RTK_VOIP_PLATFORM_MASK		(PLATFORM_MASK | PLATFORM_TYPE_MASK)

/* IVR */
#if defined (CONFIG_RTK_VOIP_IVR)
#define	RTK_VOIP_IVR_FEATURE		IVR_SUPPORT
#else
#define	RTK_VOIP_IVR_FEATURE		0x0
#endif

/* One ARM Router */
#if defined (CONFIG_RTK_VOIP_DRIVERS_8186V_ROUTER)
#define RTK_VOIP_ONE_ARM_ROUTER_FEATURE ONE_ARM_ROUTER_SUPPORT
#else
#define RTK_VOIP_ONE_ARM_ROUTER_FEATURE 0x0
#endif

/* G729 */
#if defined (CONFIG_RTK_VOIP_G729AB)
#define  RTK_VOIP_G729_FEATURE		CODEC_G729_SUPPORT
#else
#define  RTK_VOIP_G729_FEATURE		0x0
#endif

/* G723 */
#if defined (CONFIG_RTK_VOIP_G7231)
#define  RTK_VOIP_G723_FEATURE		CODEC_G723_SUPPORT
#else
#define  RTK_VOIP_G723_FEATURE		0x0
#endif

/* G726 */
#if defined (CONFIG_RTK_VOIP_G726)
#define  RTK_VOIP_G726_FEATURE		CODEC_G726_SUPPORT
#else
#define  RTK_VOIP_G726_FEATURE		0x0
#endif

/* GSM-FR */
#if defined (CONFIG_RTK_VOIP_GSMFR)
#define  RTK_VOIP_GSMFR_FEATURE		CODEC_GSMFR_SUPPORT
#else
#define  RTK_VOIP_GSMFR_FEATURE		0x0
#endif

/* AMR */
#if defined (CONFIG_RTK_VOIP_AMR)
#define  RTK_VOIP_AMR_FEATURE		CODEC_AMR_SUPPORT
#else
#define  RTK_VOIP_AMR_FEATURE		0x0
#endif

/* iLBC */
#if defined (CONFIG_RTK_VOIP_ILBC)
#define  RTK_VOIP_iLBC_FEATURE		CODEC_iLBC_SUPPORT
#else
#define  RTK_VOIP_iLBC_FEATURE		0x0
#endif

/* T.38 */
#if defined (CONFIG_RTK_VOIP_T38)
#define  RTK_VOIP_T38_FEATURE		CODEC_T38_SUPPORT
#else
#define  RTK_VOIP_T38_FEATURE		0x0
#endif

/* G.722 */
#if defined (CONFIG_RTK_VOIP_G722)
#define  RTK_VOIP_G722_FEATURE		CODEC_G722_SUPPORT
#else
#define  RTK_VOIP_G722_FEATURE		0x0
#endif

/* SPEEX_NB */
#if defined (CONFIG_RTK_VOIP_SPEEX_NB)
#define  RTK_VOIP_SPEEX_NB_FEATURE	CODEC_SPEEX_NB_SUPPORT
#else
#define  RTK_VOIP_SPEEX_NB_FEATURE	0x0
#endif

/* VoIP Middleware*/
#ifndef CONFIG_AUDIOCODES_VOIP
#define	RTK_VOIP_MW_FEATURE			VOIP_MW_REALTEK
#else
#define	RTK_VOIP_MW_FEATURE			VOIP_MW_AUDIOCODES
#endif

/* Ethernet DSP VoIP */
#ifdef CONFIG_RTK_VOIP_ETHERNET_DSP
#define	RTK_VOIP_ETHERNET_DSP_FEATURE		ETHERNET_DSP_VOIP
#else
#define	RTK_VOIP_ETHERNET_DSP_FEATURE		NON_ETHERNET_DSP_VOIP
#endif

#define RTK_VOIP_CODEC_FEATURE	( \
								RTK_VOIP_G729_FEATURE	| \
								RTK_VOIP_G723_FEATURE	| \
								RTK_VOIP_G726_FEATURE	| \
								RTK_VOIP_GSMFR_FEATURE	| \
								RTK_VOIP_AMR_FEATURE	| \
								RTK_VOIP_iLBC_FEATURE 	| \
								RTK_VOIP_T38_FEATURE	| \
								RTK_VOIP_G722_FEATURE	| \
								RTK_VOIP_SPEEX_NB_FEATURE \
								)

#define	RTK_VOIP_CODEC_MASK		( \
								CODEC_G729_SUPPORT	| \
								CODEC_G723_SUPPORT	| \
								CODEC_G726_SUPPORT	| \
								CODEC_GSMFR_SUPPORT	| \
								CODEC_AMR_SUPPORT	| \
								CODEC_iLBC_SUPPORT	| \
								CODEC_T38_SUPPORT	| \
								CODEC_G722_SUPPORT	| \
								CODEC_SPEEX_NB_SUPPORT	\
								)

/* 64 bit */
#ifdef CONFIG_RTK_VOIP_ETHERNET_DSP_IS_HOST

#define RTK_VOIP_FEATURE 	( \
							RTK_VOIP_SLIC_FEATURE			| \
							RTK_VOIP_DECT_FEATURE			| \
							RTK_VOIP_DAA_FEATURE			| \
							RTK_VOIP_PLATFORM_FEATURE 		| \
							RTK_VOIP_IVR_FEATURE			| \
							RTK_VOIP_ONE_ARM_ROUTER_FEATURE	| \
							RTK_VOIP_CODEC_FEATURE 			| \
							RTK_VOIP_MW_FEATURE	| \
							RTK_VOIP_DSP_DEVICE_NUM_FEATURE	| \
							RTK_VOIP_ETHERNET_DSP_FEATURE	\
							)
#else
#define RTK_VOIP_FEATURE 	( \
							RTK_VOIP_SLIC_FEATURE			| \
							RTK_VOIP_DECT_FEATURE			| \
							RTK_VOIP_DAA_FEATURE			| \
							RTK_VOIP_PLATFORM_FEATURE 		| \
							RTK_VOIP_IVR_FEATURE			| \
							RTK_VOIP_ONE_ARM_ROUTER_FEATURE	| \
							RTK_VOIP_CODEC_FEATURE 			| \
							RTK_VOIP_MW_FEATURE	| \
							RTK_VOIP_ETHERNET_DSP_FEATURE	| \
							RTK_VOIP_ETHERNET_DSP_FEATURE	\
							)
#endif

//------- feature macro -----------------------
#define RTK_VOIP_SLIC_NUM(f)	( unsigned int )				\
				(((f) & SLIC_TYPE_MASK) != NO_SLIC_SUPPORT ?	\
					(((f) & SLIC_NUM_MASK) + 1) : 0 )
#define RTK_VOIP_DAA_NUM(f)		( unsigned int )		\
				(((f) & DAA_TYPE_MASK) != NO_DAA ?		\
					((((f) & DAA_NUM_MASK) >> 6) + 1) : 0 )
#define RTK_VOIP_DECT_NUM(f)	( unsigned int )		\
				(((f) & DECT_TYPE_MASK) != NO_DECT ?	\
					((((f) & DECT_NUM_MASK) >> 4) + 1) : 0 )

#define RTK_VOIP_DECT_CH_OFFSET(f)	( unsigned int )0
#define RTK_VOIP_SLIC_CH_OFFSET(f)	( unsigned int )(RTK_VOIP_DECT_CH_OFFSET(f) + RTK_VOIP_DECT_NUM(f))
#define RTK_VOIP_DAA_CH_OFFSET(f)	( unsigned int )(RTK_VOIP_SLIC_CH_OFFSET(f) + RTK_VOIP_SLIC_NUM(f))

#define RTK_VOIP_IS_DECT_CH(ch, f)	( ( ( ch ) >= RTK_VOIP_DECT_CH_OFFSET( f ) ) && ( ( ch ) < RTK_VOIP_DECT_CH_OFFSET( f ) + RTK_VOIP_DECT_NUM( f ) ) )
#define RTK_VOIP_IS_SLIC_CH(ch, f)	( ( ( ch ) >= RTK_VOIP_SLIC_CH_OFFSET( f ) ) && ( ( ch ) < RTK_VOIP_SLIC_CH_OFFSET( f ) + RTK_VOIP_SLIC_NUM( f ) ) )
#define RTK_VOIP_IS_DAA_CH(ch, f)	( ( ( ch ) >= RTK_VOIP_DAA_CH_OFFSET( f ) )  && ( ( ch ) < RTK_VOIP_DAA_CH_OFFSET( f )  + RTK_VOIP_DAA_NUM( f ) ) )

#define	RTK_VOIP_PLATFORM_CHECK(f)	(((f) & RTK_VOIP_PLATFORM_MASK) == RTK_VOIP_PLATFORM_FEATURE)
#define RTK_VOIP_PLATFORM_CHK_IS8676(f)	(((f) & RTK_VOIP_PLATFORM_MASK) == (PLATFORM_867x | PLATFORM_TYPE_8676))
#define RTK_VOIP_PLATFORM_CHK_IS8672(f)	(((f) & RTK_VOIP_PLATFORM_MASK) == (PLATFORM_867x | PLATFORM_TYPE_8672))
#define RTK_VOIP_PLATFORM_CHK_IS865xC(f)	(((f) & RTK_VOIP_PLATFORM_MASK) == (PLATFORM_865x | PLATFORM_TYPE_865xC))
#define RTK_VOIP_PLATFORM_CHK_IS8972B(f)	(((f) & RTK_VOIP_PLATFORM_MASK) == (PLATFORM_89xx | PLATFORM_TYPE_8972B_8982B))
#define RTK_VOIP_PLATFORM_CHK_IS89xxC(f)	(((f) & RTK_VOIP_PLATFORM_MASK) == (PLATFORM_89xx | PLATFORM_TYPE_89xxC))
#define	RTK_VOIP_ROUTER_CHECK(f)	(((f) & ONE_ARM_ROUTER_SUPPORT) == RTK_VOIP_ONE_ARM_ROUTER_FEATURE)
#define	RTK_VOIP_SLIC_CHECK(f)		(((f) & SLIC_NUM_MASK) == RTK_VOIP_SLIC_FEATURE)
#define	RTK_VOIP_DECT_CHECK(f)		(((f) & RTK_VOIP_DECT_MASK) == RTK_VOIP_DECT_FEATURE)
#define	RTK_VOIP_DAA_CHECK(f)		(((f) & RTK_VOIP_DAA_MASK) == RTK_VOIP_DAA_FEATURE)
#define	RTK_VOIP_CODEC_CHECK(f)		(((f) & RTK_VOIP_CODEC_MASK) == RTK_VOIP_CODEC_FEATURE)
#define	RTK_VOIP_MW_CHECK(f)		(((f) & VOIP_MW_REALTEK) == RTK_VOIP_MW_FEATURE)
#define	RTK_VOIP_ETHERNET_DSP_CHECK(f)		(((f) & ETHERNET_DSP_MASK) == ETHERNET_DSP_VOIP)
/* RTK_VOIP_CH_NUM(f) get the SLIC number + real DAA number */

//#define SLIC_NUM			(RTK_VOIP_SLIC_FEATURE + 1)
//#define MAX_SLIC_NUM			(SLIC_NUM_6 + 1)
//#define DECT_NUM			((RTK_VOIP_DECT_FEATURE >> 4) + 1)
//#define DAA_NUM				((RTK_VOIP_DAA_FEATURE >> 6) + 1)
//#ifdef CONFIG_RTK_VOIP_ETHERNET_DSP_IS_HOST
#define DSP_DEVICE_NUMBER(f)		( !RTK_VOIP_ETHERNET_DSP_CHECK(f) ? 0 : 	\
									  ( ( ( (f) & DSP_DEVICE_NUM_MASK ) >> DSP_DEVICE_NUM_SHIFT ) + 1 ) )
//#else
//#define DSP_DEVICE_NUMBER		0
//#endif
#define RTK_VOIP_CH_NUM(f)		(((f) & SLIC_NUM_MASK) + 1)*(((f)& SLIC_TYPE_MASK) == SLIC_SUPPORT)+	\
								((((f) & DECT_NUM_MASK) >> 4) + 1)*(((f)& DECT_TYPE_MASK) == DECT_SUPPORT)+	\
								((((f) & DAA_NUM_MASK) >> 6) + 1)*(((f)& DAA_TYPE_MASK) == REAL_DAA_NEGO)

#endif
